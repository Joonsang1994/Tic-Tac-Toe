{"version":3,"sources":["logo.jpg","index.js"],"names":["Square","props","classes","iswinningTile","datatoShow","value","className","onClick","Board","i","this","squares","winningTiles","includes","push","renderSquare","React","Component","Game","state","history","Array","fill","clickPosition","stepNumber","xIsNext","lastStepClicked","sortAsc","step","setState","slice","length","calculateWinner","concat","lines","a","b","c","status","current","winner","sort","moves","map","move","row","Math","floor","col","desc","jumpTo","reverse","getWinningTiles","isDraw","src","logo","alt","handleClick","window","location","reload","handleToggleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed6f6be7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0a64b44e.jpg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tailwind.css';\r\nimport logo from './logo.jpg'\r\n\r\nfunction Square(props){\r\n    let classes = \"bg-cyan-100 rounded-2xl md:p-6 text-2xl cursor-pointer\";\r\n    if(props.iswinningTile){\r\n      classes = \"bg-green-200 rounded-2xl md:p-6 text-2xl cursor-pointer\"\r\n    }\r\n    let datatoShow = props.value===null? \"✎\":props.value;\r\n      return (\r\n        <div className={classes} onClick={props.onClick}>\r\n          <span className=\"font-bold\">{datatoShow}</span>\r\n        </div>\r\n      );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n    renderSquare(i,iswinningTile) {\r\n      return (<Square key={i}\r\n      value={this.props.squares[i]} \r\n      iswinningTile={iswinningTile}\r\n      onClick={()=>this.props.onClick(i)}\r\n      />);\r\n    }\r\n  \r\n    render() {\r\n      let squares =[];\r\n      //let count=0;\r\n      // for(let i=0;i<3;i++){\r\n      //   let children=[];\r\n      //   for(let j=0;j<3;j++){\r\n      //     if(this.props.winningTiles.includes(count)){\r\n      //       children.push(this.renderSquare(count,true));\r\n      //     }else{\r\n      //       children.push(this.renderSquare(count,false));\r\n      //     }\r\n          \r\n      //     count++;\r\n      //   }\r\n      //   squares.push(<div key={i}>{children}</div>);\r\n      // }\r\n      for(let i=0;i<9;i++){\r\n          if(this.props.winningTiles.includes(i)){\r\n            squares.push(this.renderSquare(i,true));\r\n          }else{\r\n            squares.push(this.renderSquare(i,false));\r\n          }\r\n        }\r\n\r\n    return (\r\n        <div className=\"grid grid-rows-3 grid-cols-3 gap-4\">\r\n          {squares}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history:[{\r\n                squares:Array(9).fill(null),\r\n                clickPosition:Array(9).fill(null)\r\n            }],\r\n            stepNumber:0,\r\n            xIsNext:true,\r\n            lastStepClicked:-1,\r\n            sortAsc: true\r\n        }\r\n    }\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            lastStepClicked:step\r\n        })\r\n    }\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length-1];\r\n        const squares = current.squares.slice();\r\n        if(this.calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext?'X':'O';\r\n        //const clickPosition = current.clickPosition.slice();\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares:squares,\r\n                clickPosition:i\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n            lastStepClicked:-1\r\n        })\r\n    }\r\n    handleToggleClick(){\r\n      this.setState({\r\n        sortAsc: !this.state.sortAsc,\r\n      })\r\n    }\r\n    calculateWinner(squares) {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n          return squares[a];\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    isDraw(squares){\r\n      if(this.calculateWinner(squares)===null && !squares.includes(null)){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    getWinningTiles(squares) {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) { \r\n          return lines[i];\r\n        }\r\n      }\r\n      return [-1,-1,-1]\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n        let sort = \"Sort Desc ↓\";\r\n        const moves = history.map((step,move)=>{\r\n          const clickPosition = this.state.history[move].clickPosition;\r\n          const row = Math.floor(clickPosition / 3);\r\n          const col = clickPosition % 3;\r\n            const desc = move?\r\n            move===this.state.lastStepClicked?\r\n            <b>Go to step #{move}. Position: ({row},{col})</b>:\r\n            <span>Go to step #{move}. Position: ({row},{col})</span>:\r\n            'Go to game start';\r\n            return (<li key={move}>\r\n                <button onClick={()=>this.jumpTo(move)}>{desc}</button>\r\n            </li>)\r\n        });\r\n        if(!this.state.sortAsc){\r\n          sort = \"Sort Asc ↑\";\r\n          moves.reverse();\r\n        }\r\n\r\n        let status;\r\n        let winningTiles = [-1,-1,-1];\r\n        if (winner) {\r\n          status = \"Winner: \" + winner;\r\n          winningTiles =  this.getWinningTiles(current.squares);\r\n        } else if (this.isDraw(current.squares)) {\r\n          status = \"Match Draw\";\r\n        } else {\r\n          status = \"Next Turn: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n        }\r\n\r\n      return (\r\n        <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\r\n  <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\r\n    <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-sky-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\r\n    <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\r\n      <div className=\"max-w-md mx-auto\">\r\n      <div className=\"mx-auto\">\r\n          <img src={logo} alt=\"logo\" className=\"h-12 my-4 mx-auto\" />\r\n      </div>\r\n      <div className=\"w-full overflow-hidden text-center\">\r\n      <p className=\"text-lg py-2 px-4 my-4\">{status}</p>\r\n            <Board \r\n                squares={current.squares}\r\n                winningTiles={winningTiles}\r\n                onClick={(i)=> this.handleClick(i)}\r\n            />\r\n        </div>\r\n        <div className=\"my-10\">\r\n        <button className=\"py-2 px-4 m-2 float-left bg-cyan-500 text-white font-semibold rounded-lg shadow-md hover:bg-cyan-600 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:ring-opacity-75\" onClick={()=>window.location.reload()}>Restart ↺</button>\r\n           <button className=\"py-2 px-4 m-2 float-right bg-cyan-500 text-white font-semibold rounded-lg shadow-md hover:bg-cyan-600 focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:ring-opacity-75\" onClick={()=>this.handleToggleClick()}>{sort}</button>\r\n            {/* <ol>{moves}</ol> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}